/* 
CLASE INTEGRADORA DE CONTENIDOS II

*/

//NIVEL 1

/* 
  ?desarrollar una funcion que reciba 2 nros como parametro
  ?analizar si el primer es par retornar la suma
  ?caso contrario retornal la resta
*/

function sumarSiEsParA(a, b) {
    if (a % 2 === 0) {
        return a + b
    }else{
        return a - b
    }
}

// console.log(sumarSiEsParA(2,5));

/* Obtener en un nuevo array las edades menores a 18.*/

const edades = [11, 12, 15, 18, 25, 22, 10, 33, 18, 5];
const edades2 = [11, 12];

/* function obtenerMenores2(arrayEdades) {
    let menores = []
    let mayores = []

    for (let i = 0; i < arrayEdades.length; i++) {
       if (arrayEdades[i] < 18) {
            menores.push(arrayEdades[i])
       }else{
            mayores.push(arrayEdades[i])
       }     
    }
    
    return {
        propMenores : menores,
        propMayores : mayores
    }
} */


function obtenerMenores(arrayEdades) {
    let menores = []

    for (let i = 0; i < arrayEdades.length; i++) {
       if (arrayEdades[i] < 18) {
            menores.push(arrayEdades[i])
       }  
    }
    
    return menores
}

// console.log(obtenerMenores(edades)); //[11, 12, 15, 10, 5]
// console.log(obtenerMenores(edades2)); //[11, 12]

/* 
Obtener en un nuevo array las edades mayor o igual a 18.
*/
function obtenerMayores(arrayEdades) {
    let mayores = []
    for (let i = 0; i < arrayEdades.length; i++) {
       if (arrayEdades[i] >= 18) {
            mayores.push(arrayEdades[i])
       }  
    }
    return mayores
}

function obtenerIguales(arrayEdades) {
    let iguales = []
    for (let i = 0; i < arrayEdades.length; i++) {
       if (arrayEdades[i] === 18) {
            iguales.push(arrayEdades[i])
       }  
    }
    return iguales
}
// console.log(obtenerIguales(edades)); //[18, 18]

console.table(edades);
/* Incrementar en 1 todas las edades. */

function incrementar(arrayEdades) {
    for (let i = 0; i < arrayEdades.length; i++) {
        arrayEdades[i]++
    }
}
/* incrementar(edades)
console.table(edades); */

/* 
PISTAS PARA RETORNAR EN UNA FUNCION
* OBTENER
* DEVOLVER
* RETORNAR
*/